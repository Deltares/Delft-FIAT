---
title: "Developer guide"
---

We welcome contributions like bug reports, bug fixes, documentation improvements, enhancements, and ideas.
This guide provided an overview on how to go about it.

## Development philosophy
The aim of FIAT is to be a lean calculation core, focusing on the main tasks of FIAT of combining exposure, vulnerability and hazard data and calculating damages and risk. Developments related to pre- and post-processing of FIAT data should be done in respectively the [HydroMT-FIAT](https://deltares.github.io/hydromt_fiat/latest) and [FIAT Toolbox](https://github.com/Deltares/fiat_toolbox) repositories.

## Issue conventions {#sec-issue-conventions}

FIAT has known and unknown bugs. Improvements through bug reports or feature requests in our [issue tracker](https://github.com/Deltares/Delft-FIAT/issues) are welcomed. Please search open and closed existing issues, before creating a new one.

For issues related to pre- and post-processing of FIAT data, please refer to respectively the [HydroMT-FIAT](https://deltares.github.io/hydromt_fiat/latest) and [FIAT Toolbox](https://github.com/Deltares/fiat_toolbox) repositories.

## Guidelines
Please follow the guidelines when contributing to the FIAT development:

1. Create an issue if it does not yet exist, when starting contributing. For more information on the issues, see the [contributing page](./#sec-issue-conventions).
2. Fork the repository.
3. Develop on the repository with descriptive commit messages.
4. We work with Ruff linting, so always format the added or changed code with this library.
5. For each newly developed feature we require a pytest test.
6. Create a Pull Request to the master branch stating the developments made and the related issue.
7. Once reviewed and if accepted, Deltares will merge the developments to the master branch.

We would like to get in touch with those that want to contribute. Do not hesitate to send us an email [email address coming soon]!
