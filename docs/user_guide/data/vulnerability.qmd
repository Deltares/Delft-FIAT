---
title: "Vulnerability data"
format:
  html:
    code-fold: true
jupyter: python3
---
The **vulnerability** of an asset is determined by its building type (e.g. 'residential 1-story building') and the inundation depth, also refered to as water depth, during a flood event. Different assests incur different degrees of damage at varying inundation levels. This **vulnerability** can be quantified via **flood depth-damage** functions, see for example @fig-damagefunction. The damage function relates the water depth to the maximum potential damage per asset and returns the damage fraction (a value between 0 and 1). The damage fraction is multiplied by the maximum potential damage to obtain a damage value. The value of the maximum potential damage differs per asset and must be specified in the [exposure data](exposure.qmd).

```{python}
#| echo: false
#| label: fig-damagefunction
#| fig-cap: "Damage functions of different assets/structures. "
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from pathlib import Path


file_path = Path.cwd()
for _ in range(3):
    file_path = file_path.parent

file_path = Path(file_path, ".testdata", "vulnerability", "vulnerability_curves.csv")
file_path = file_path.resolve()
data = df = pd.read_csv(file_path, comment='#')
df = pd.DataFrame({
    ('water depth'): data.iloc[:, 0],
    ('STRUCT1'): data.iloc[:, 1],
    ('STRUCT2'): data.iloc[:, 2],

})

labels=["STRUCT1","STRUCT2"]
plt.plot(df['water depth'], df['STRUCT1'])
plt.plot(df['water depth'], df['STRUCT2'])
plt.xlabel('Water depth (m)')
plt.ylabel('Fraction of maximum potential damage')
plt.legend(labels)
plt.gca().get_legend().set_title('')
```


The damage functions must be given in a CSV file (`vulnerability.csv`), located in the [vulnerability folder](data.qmd), see for example @tbl-damage-curve. The first column contains the water depth, and then each additional column provides the damage fraction for the corresponding damage function. Three header rows are required, describing the unit of the water depth; `#UNIT=<unit>`, e.g., `#UNIT=m`. The second row, named `#METHOD`, must be defined for each damage-curve separately above the damage curve name. The method refers to the way that multiple flood values will be aggregated per asset in case the *area* method is used for deriving the inundation depth. The damage curve name must coincide with the name of the damage function defined in the [exposure data](exposure.qmd).

::: {.callout-important}
 Water depth units (e.g. feet or meters) must be consistent with the units of the flood hazard map and the exposure data (i.e., ground elevation, ground floor height).
:::


```{python}
#| echo: false
#| label: tbl-damage-curve
#| tbl-cap: "Vulnerability data CSV file. The water depth must be in the outer left column followed by the damage functions. The user has the freedom to add multiple damage curves. "

import pandas as pd
from pathlib import Path
from IPython.display import HTML

file_path = Path.cwd()
for _ in range(3):
    file_path = file_path.parent

file_path = Path(file_path, ".testdata", "vulnerability", "vulnerability_curves.csv")
file_path = file_path.resolve()
data = pd.read_csv(file_path, comment='#')

df = pd.DataFrame({
    ('#UNIT=m','#METHOD','water depth'): data.iloc[:, 0],
    ('','mean', 'STRUCT1'): data.iloc[:, 1],
    ('','max','STRUCT2'): data.iloc[:, 2],
})

HTML(df.to_html(index=False))
```


Water depths may be negative for assets that incur damage below the ground floor height, and the user is free to choose any water depth increments in the CSV file. The damage functions can have any name. Multiple damage-functions can be described in the vulnerability curves CSV file by simply adding consecutive columns next to one another.

::: {.callout-tip}
You can also create damage functions with the [**HydroMT-FIAT model builder**](https://deltares.github.io/hydromt_fiat/latest/#)
:::
