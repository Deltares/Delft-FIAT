---
name: Build Documentation

on:
  push:
    branches: [master]
    paths:
      - docs/*
      - src/fiat/*
      - .testdata/*
      - pyproject.toml
      - .github/workflows/docs.yml
  pull_request:
    branches: [master]
    paths:
      - docs/*
      - src/fiat/*
      - .testdata/*
      - pyproject.toml
      - .github/workflows/docs.yml

jobs:
  docs:
    defaults:
      run:
        shell: bash -l {0}

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        include:
          - os: ubuntu-latest
            label: linux-64

    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pixi env
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: "v0.40.3"
          environments: docs
          locked: false
          cache: true
          cache-write: ${{ github.event_name == 'push' && github.ref_name == 'master' }}

      - name: Install quarto extensions
        run: |
          sudo apt install -y expect
          pixi shell-hook --manifest-path pyproject.toml -s $shell_var -e build-linux > pixi-hook.rc
          source pixi-hook.rc
          cd docs
          chmod u+x _scripts/add_packages.sh
          _scripts/add_packages.sh

      - name: Install fiat
        run: |
          pixi run -e docs install-fiat

      - name: Setup testdata
        run: |
          pixi run -e docs generate-data

      - name: Generate docs
        run: |
          pixi run -e docs docs
          echo "DOC_VERSION=$(pixi run -e docs python -c 'from fiat import __version__ as v; print("dev" if "dev" in v else "v"+v.replace(".dev",""))')" >> $GITHUB_ENV

      - name: Upload to GitHub Pages
        if: ${{ github.event_name != 'pull_request' && !github.event.act }}
        uses: peaceiris/actions-gh-pages@v3.9.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/_site
          destination_dir: ./${{ env.DOC_VERSION }}
          keep_files: false
          full_commit_message: Deploy ${{ env.DOC_VERSION }} to GitHub Pages

      - name: Trigger Dispatch
        if: ${{ github.event_name != 'pull_request' && !github.event.act }}
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          event-type: docs-updated
