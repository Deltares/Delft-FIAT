---
name: Code analysis
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    env:
      PYVERSION: "3.11"

    name: SonarCloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate env yaml
        run: pip install tomli && python make_env.py test -p ${{ env.PYVERSION }}.*

      - name: load from cache
        id: cache
        uses: actions/cache/restore@v3
        with:
          path: |
            /usr/share/miniconda3
            ~/pycache
          # the below two settings mean we'll alway srestore the cache
          # but the cache hit output can tell us if we have to update afterwards
          key: test-py${{ env.PYVERSION }}-${{ hashFiles('environment.yml')  }}
          restore-keys: |
            test-py${{ env.PYVERSION }}

      - name: Fail on no cache restore
        if: steps.cache.outputs.cache-matched-key == ''
        run: |
          echo "Failed to restore any cache. exiting..."
          exit 1

      - name: Update environment
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          export PATH=/usr/share/miniconda3/bin:$PATH
          mamba env update -n fiat_test -f environment.yml

      - name: Create testdata
        run: |
          export PATH=/usr/share/miniconda3/bin:$PATH
          mamba run -n fiat_test python .testdata/create_test_data.py

      - name: Generate coverage report
        run: |
          export PATH=/usr/share/miniconda3/bin:$PATH
          mamba run -n fiat_test python -m pytest --verbose --cov=fiat --cov-report xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
