---
name: Publish to PyPI

on:
  release:
    types:
      - published
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  build-distributions:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.13"

      - name: generate env
        run: |
          pip install build tomli twine wheel

      - name: Build artifacts
        run: |
          python -m build --sdist
          python -m build --wheel
          python -m twine check dist/*

      - uses: actions/upload-artifact@v4
        with:
          name: releases
          path: dist

  test-built-dist:
    needs: build-distributions

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        include:
          - os: ubuntu-latest
            label: linux-64
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pixi env
        uses: prefix-dev/setup-pixi@v0.8.13
        with:
          pixi-version: "v0.49.0"
          environments: slim
          locked: false
          cache: true
          cache-write: ${{ github.event_name == 'push' && github.ref_name == 'master' }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: releases
          path: dist

      - name: List contents of built dist
        run: |
          ls -ltrh
          ls -ltrh dist

      - name: Verify the built dist/wheel is valid
        run: |
          pixi run python -m pip install dist/delft_fiat*.whl
          pixi run fiat --help

  upload-to-test-pypi:
    needs: test-built-dist

    if: github.event_name == 'push'

    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/Delft-FIAT

    permissions:
      id-token: write

    steps:
      - name: Download the sdist and wheel
        uses: actions/download-artifact@v4
        with:
          name: releases
          path: dist/
      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  upload-to-pypi:
    needs: test-built-dist

    if: ${{ github.event_name == 'release' && !github.event.act  }}

    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/Delft-FIAT

    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: releases
          path: dist
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
